#!/usr/bin/env python

# Here we use the ipsec statusall command to get info about a specific tunnel.
# We dig through the results to find the bytes_i and bytes_o values, and return
# those to the caller via stdout.  Since the search tokens come after the
# corresponding values, we track the search index so we can look at
# the previous token when we find what we are looking for. We also look for
# the word ESTABLISHED to decide if the tunnel is active or down, and the
# local and remote tokens to find the actual tunnel endpoints.

import subprocess
import sys

if (len(sys.argv) < 2):
    raise Exception("Invalid number of arguments")
work_name = sys.argv[1]

status_proc = subprocess.Popen("/usr/sbin/ipsec statusall " + work_name, stdout=subprocess.PIPE, shell=True)
(status_out,status_err) = status_proc.communicate()

wordlist = status_out.split()
svalue = "down"
lvalue = "unknown"
rvalue = "unknown"
ivalue = 0
ovalue = 0
index = 0
current_established_seconds = -1

for token in wordlist:
    if (token.startswith("ESTABLISHED") == True):
        svalue = "active"
        established_seconds = int(wordlist[index + 1])
        interval = wordlist[index + 2]
        if interval == "minutes":
            established_seconds *= 60
        elif interval == "hours":
            established_seconds *= 3600
        elif interval == "days":
            established_seconds *= 86400
        if current_established_seconds == -1 or established_seconds < current_established_seconds:
            current_established_seconds = established_seconds
            [lvalue,rvalue] = wordlist[index+4].split('...')
            [lvalue,x] = lvalue.split('[')
            [rvalue,x] = rvalue.split('[')

    if lvalue != "unknown" and token.startswith(work_name+":") and "..." in wordlist[index+1]:
        [lvalue,rvalue] = wordlist[index+1].split('...')
        print(rvalue)

    if (token.startswith("bytes_i") == True):
        ivalue += int(wordlist[index - 1])

    if (token.startswith("bytes_o") == True):
        ovalue += int(wordlist[index - 1])
	
    index += 1

print "| TUNNEL:%s LOCAL:%s REMOTE:%s STATE:%s IN:%d OUT:%d |" % (sys.argv[1] , lvalue, rvalue, svalue, ivalue , ovalue)
