#!/bin/bash
# openvpn-start
# called from NGFW before calling systemctl start for all connections
# ----------------------------------------------------------------------
# We now call systemctl directly from Java to start/stop/restart the
# procs for the server and any configured client configs, so this file
# only has to handle housekeeping stuff.
# ----------------------------------------------------------------------
SETTINGS_DIR="/usr/share/untangle/settings/openvpn"
# If the tun device doesn't exist, then create it
# https://forum.openwrt.org/viewtopic.php?id=15979
if [ ! -c /dev/net/tun ]; then
    mkdir -p /dev/net
    mknod /dev/net/tun c 10 200
fi

# Make sure no openvpn daemon is ever started at boot time (NGFW-12379)
perl -i -pe 's/^.*(?=AUTOSTART="all")/#/g' /etc/default/openvpn
perl -i -pe 's/^#?(?=AUTOSTART="none")//g' /etc/default/openvpn
systemctl daemon-reload

# Verify/set the links to the settings files from /etc/openvpn
mkdir -p /etc/openvpn/data
for f in server.key server.crt ca.key ca.crt dh.pem ; do
  ln -fs @PREFIX@${SETTINGS_DIR}/$f /etc/openvpn/data/
done

# Write the status file for tun0
# always use tun0 because that is the server (or the first client if the server isn't running)
for intf in 250 tun0 ; do
  f="/var/lib/interface-status/interface-${intf}-status.js"
  echo "Writing status file: $f"
  /usr/share/untangle-sync-settings/bin/write-interface-status.py -I tun0 -i 250 -w $f
  if [ ! -f $f ] ; then
    echo "Missing status file!"
  fi
done

exit $RET
