#!/usr/bin/env python

# We need to create the interface status files so wireguard clients
# know how to find the Untangle server.  Since we really only care
# about the IP address we dummy up the other values.

from netaddr import IPNetwork
from uvm.settings_reader import get_app_settings_item
import os
import sys

# Read the address pool from the wireguard app settings file
addressPool = get_app_settings_item("wireguard-vpn", "addressPool")

# If not found we remove any existing interface status files and exit
if addressPool == None:
    if os.path.exists("/var/lib/interface-status/interface-249-status.js"):
        os.remove("/var/lib/interface-status/interface-249-status.js")
    if os.path.exists("/var/lib/interface-status/interface-wg0-status.js"):
        os.remove("/var/lib/interface-status/interface-wg0-status.js")
    sys.exit(0)

# We have good config data so use the first address for the server
network = IPNetwork(addressPool);
serverAddress = str(network[1])
blockSize = str(network.prefixlen)
blockMask = str(network.netmask)

# Create the json config string
cfgstr = ("")
cfgstr += ("{")
cfgstr += ("\"javaClass\": \"com.untangle.uvm.network.InterfaceStatus\", ")
cfgstr += ("\"v4Address\": \"" + serverAddress + "\", ")
cfgstr += ("\"v4Netmask\": \"" + blockMask + "\", ")
cfgstr += ("\"v4PrefixLength\": \"" + blockSize + "\", ")
cfgstr += ("\"interfaceId\": 249")
cfgstr += ("}\n")

afile = open("/var/lib/interface-status/interface-249-status.js", "w")
afile.write(cfgstr)
afile.close()

bfile = open("/var/lib/interface-status/interface-wg0-status.js", "w")
bfile.write(cfgstr)
bfile.close()
